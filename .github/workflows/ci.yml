name: CI

on:
  workflow_dispatch:
  pull_request:
    branches: ["master"]
  push:
    branches: ["master"]

env:
  CATBOOST_VERSION: "v1.2.7"

jobs:
  Linter:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: ".python-version"

      - name: Install requirements
        run: pip install -r requirements.txt

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60.3

      - name: Black
        run: black example --check

      - name: Ruff
        run: ruff check --select=F example

  Test:
    needs: [Linter]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Download library
        run: |
          sudo wget -q "https://github.com/catboost/catboost/releases/download/$CATBOOST_VERSION/libcatboostmodel.so" -O /usr/local/lib/libcatboostmodel.so

      - name: Run tests
        run: |
          go test -v ./... -coverprofile=tmp_coverage.out
          cat tmp_coverage.out | grep -v example > coverage.out
          rm tmp_coverage.out

      - name: Upload coverage
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          file: ./coverage.out
          fail_ci_if_error: true

  Inference:
    needs: [Test]
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v5

      - name: Configuration MacOS
        if: matrix.platform == 'macos-latest'
        run: |
          sudo mkdir /usr/local/lib
          sudo wget -q "https://github.com/catboost/catboost/releases/download/$CATBOOST_VERSION/libcatboostmodel.dylib" -O /usr/local/lib/libcatboostmodel.dylib

      - name: Configuration Linux
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo wget -q "https://github.com/catboost/catboost/releases/download/$CATBOOST_VERSION/libcatboostmodel.so" -O /usr/local/lib/libcatboostmodel.so

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: ".python-version"

      - name: Install requirements
        run: pip install -r requirements.txt

      - name: Train (Python)
        run: |
          python example/classifier/classifier.py 
          python example/regressor/regressor.py 
          python example/multiclassification/multiclassification.py 
          python example/metadata/metadata.py
          python example/ranker/ranker.py
          python example/survival/survival.py
          python example/titanic/titanic.py
          python example/uncertainty/uncertainty.py

      - name: Predict (Golang)
        run: |
          go run example/classifier/classifier.go
          go run example/regressor/regressor.go
          go run example/multiclassification/multiclassification.go
          go run example/metadata/metadata.go
          go run example/ranker/ranker.go
          go run example/survival/survival.go
          go run example/device/device.go
          go run example/titanic/titanic.go
          go run example/uncertainty/uncertainty.go
