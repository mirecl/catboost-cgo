name: CI

on:
  workflow_dispatch:
  pull_request:
    branches: ["master"]

jobs:
  Linter:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60.3

  Test:
    needs: [Linter]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Download library
        run: |
          sudo wget -q "https://github.com/catboost/catboost/releases/download/v1.2.5/libcatboostmodel.so" -O /usr/local/lib/libcatboostmodel.so

      - name: Run tests
        run: |
          go test -v ./... -coverprofile=tmp_coverage.out
          cat tmp_coverage.out | grep -v example > coverage.out

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CI_CODECOV }}
          file: ./coverage.out
          fail_ci_if_error: true

  Inference:
    needs: [Test]
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Configuration
        if: matrix.platform == 'macos-latest'
        run: |
          sudo mkdir /usr/local/lib

      - name: Download library
        run: |
          sudo wget -q "https://github.com/catboost/catboost/releases/download/v1.2.5/libcatboostmodel.so" -O /usr/local/lib/libcatboostmodel.so
          sudo wget -q "https://github.com/catboost/catboost/releases/download/v1.2.5/libcatboostmodel.dylib" -O /usr/local/lib/libcatboostmodel.dylib

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5.1.1
        with:
          python-version-file: ".python-version"

      - name: Install requirements
        run: pip install -r requirements.txt

      - name: Train (Python)
        run: make train

      - name: Predict (Golang)
        run: make predict
